
try{(function(){
var _1=false;
if(typeof wptheme==="undefined"||!wptheme){
wptheme={};
}
i$.mash(wptheme,{togglePageMode:function(_2,_3,_4,_5){
var _6=i$.byId("wpthemeModeToggle");
i$.addClass(_6,"wpthemeEditControlLoading");
return i$.modules.loadDeferred().then(function(){
var _7=i$.fromPath("com.ibm.mashups"),_8=_7?com.ibm.mashups.builder.model.Factory.getRuntimeModel():null,_9=_7?com.ibm.mashups.enabler.user.Factory.getUserModel():null,_6=i$.byId("wpthemeModeToggle"),_a=i$.byId("wpthemeModeToggleImg"),_b=i$.byId("wpthemeModeToggleAccess"),_c=i$.byId("wpthemeModeToggleAltText"),_d=document.getElementsByTagName("body")[0],_e=function(_f){
if(_7){
com.ibm.mashups.services.ServiceManager.getService("eventService").broadcastEvent("com.ibm.mashups.builder.changePageMode",_f);
_8.getCurrentPage().setPageMode(_f);
}
i$.fireEvent("wptheme/contextMenu/invalidate/all");
i$.removeClass(_6,"wpthemeEditControlLoading");
};
if((!_7&&!i$.hasClass(_d,"edit-mode"))||(_7&&_9.getAnonymousMode()!=com.ibm.mashups.enabler.user.AnonymousMode.ANONYMOUS&&_8.getCurrentPage().getPageMode()!="edit")){
_6.title=_a.alt=_3;
_b.innerHTML=_4;
_c.innerHTML=_3;
if(!_1){
dojo.publish("/com/ibm/mashups/livetext/livetextchanged",[i$.byId("wpthemeComplementaryContent"),true]);
if(!i$.isIE&&!i$.isOpera&&_7){
window.onbeforeunload=function(){
if(com.ibm.mashups.builder.model.Factory.getRuntimeModel().getCurrentPage().isDirty()){
return com.ibm.mm.builder.coreWidgetsStrings.I_PAGE_SAVE_WARNING;
}
};
}
_1=true;
}
_e("edit");
i$.addClass(_d,"edit-mode");
}else{
_6.title=_a.alt=_2;
_b.innerHTML=_5;
_c.innerHTML=_2;
_e("view");
i$.removeClass(_d,"edit-mode");
}
},function(err){
console.log("Error: "+err);
});
}});
})();


}catch(e){console.log("Module 'wp_theme_edit': ",e);}
try{(function(){

	var _1=ibmCfg.portalConfig.contentHandlerURI+((ibmCfg.portalConfig.contentHandlerURI.indexOf("?")<0)?"?":"&")+"uri=menu:${id}";
	var _2=false;
	var _3=function(){
		return i$.hasClass(document.getElementsByTagName("body")[0],"edit-mode");
	};
	
	if(typeof wptheme==="undefined"||!wptheme){
		wptheme={};
	}
	
i$.mash(wptheme,{getWindowIDFromSkin:function(_4){
while((_4=_4.parentNode)!=null){
if(i$.hasClass(_4,"component-control")){
var m=_4&&(_4.className||"").match(/id-([\S]+)/);
return m&&m[1];
}
}
return null;
},getPortletState:function(_5){
	var _6=i$.byId("portletState");
	if(_6){
		if(!_6._cache){
			_6._cache=i$.fromJson(_6.innerHTML);
			_6._cache._defaults={"windowState":"normal","portletMode":"view"};
		}
if(_6._cache[_5]){
return _6._cache[_5];
}else{
return _6._cache._defaults;
}
}
return {};
},isValidOp:function(_7){
if(_7.visibility===false){
return false;
}
var _8=_7.metadata||{};
switch(_7.id){
	case "ibm.portal.operations.changePortletMode":
		return wptheme.getPortletState(_8.wid).portletMode!=_8.portletMode;
	case "ibm.portal.operations.changeWindowState":
		return wptheme.getPortletState(_8.wid).windowState!=_8.windowState;
	default:
}
return true;
},operation:{changeToHelpMode:function(_9){
var _a=window.location.href;
if(_9.actionUrl){
if(_9.actionUrl.indexOf("?")==0){
var _b=_a.indexOf("#");
if(_b!=-1){
var _c=_a.substring(0,_b);
var _d=_a.substring(_b);
_a=_c+(_c.indexOf("?")==-1?"?":"&")+_9.actionUrl.substring(1);
_a+=_d;
}else{
_a+=(_a.indexOf("?")==-1?"?":"&")+_9.actionUrl.substring(1);
}
}else{
_a=_9.actionUrl;
}
}

window.open(_a,"","resizable=yes,scrollbars=yes,menubar=no,toolbar=no,status=no,width=800,height=600,screenX=10,screenY=10,top=10,left=10");
}},contextMenu:{cache:{},css:{focus:"wpthemeMenuFocus",disabled:"wpthemeMenuDisabled",show:"wpthemeMenuShow",error:"wpthemeMenuError",menuTemplate:"wpthemeTemplateMenu",submenuTemplate:"wpthemeTemplateSubmenu",loadingTemplate:"wpthemeTemplateLoading"},init:function(_e,_f,_10){
_e._contextMenu=_e._contextMenu||{};
_e._contextMenu.id=_e._contextMenu.id||Math.round(Math.random()*1000000000);
_e.setAttribute("id",_e._contextMenu.id);
_e._contextMenu.menuId=_f;
_e._contextMenu.jsonQuery=_10;
var _11=_e._contextMenu;

	var _12= function(_13){
				if(_13.displayMenu) {
					i$.addClass(i$.byId(_11.id),wptheme.contextMenu.css.show);
					var _14=i$.byId(_11.id)._firstSelectable;
					if(_14) {
						_14.focus();
						i$.byId(_11.id)._currentSelected=_14;
					}
				}
			};

wptheme.contextMenu._initialize(_e).then(_12,_12);
_e=null;
},initSubmenu:function(_15,_16,_17){
_15._contextMenu=_15._contextMenu||{};
_15._contextMenu._submenu=true;
_15._contextMenu._menuitemTemplate=_17._menuitemTemplate;
_15._contextMenu._subMenuTemplate=_17._subMenuTemplate;
_15._contextMenu._loadingTemplate=_17._loadingTemplate;

wptheme.contextMenu.init(_15,_16,_17.jsonQuery);
},_findFocusNode:function(_18){
var _19,i,_1a;
var _1b=function(_1c,_1d){
var l=_1c.childNodes.length;
for(i=0;i<l;i++){
if(_19){
break;
}
_1a=_1c.childNodes[i];
if(i$.hasClass(_1a,wptheme.contextMenu.css.focus)){
_19=_1a;
break;
}
if(_1a.childNodes){
i=_1b(_1a,i);
}
}
return _1d;
};
_1b(_18);
return _19;
},_findNodes:function(_1e){
var _1f,_20,_21,i,_22;
var _23=function(_24,_25){
for(i=_24.childNodes.length-1;i>=0;i--){
_22=_24.childNodes[i];
if(i$.hasClass(_22,wptheme.contextMenu.css.menuTemplate)){
_1f=_22;
continue;
}
if(i$.hasClass(_22,wptheme.contextMenu.css.submenuTemplate)){
_20=_22;
continue;
}
if(i$.hasClass(_22,wptheme.contextMenu.css.loadingTemplate)){
_21=_22;
continue;
}
if(_22.childNodes){
i=_23(_22,i);
}
}
return _25;
};
_23(_1e);
return {"menu":_1f,"submenu":_20,"loading":_21};
},_invalidateCallback:function(){
wptheme.contextMenu.cache={};
},_initialize:function(_26){
var _27=true;
var _28=_26._contextMenu;
if(wptheme.contextMenu.cache[_28.id]||_28._inProgress){
return i$.promise.resolved({displayMenu:_27});
}
_28._inProgress=true;
i$.addListener("wptheme/contextMenu/invalidate/all",wptheme.contextMenu._invalidateCallback);
var _29,_2a,tmp=i$.createDom("div");
if(_28._submenu){
tmp.innerHTML=_28._subMenuTemplate.replace(/\$\{submenu-id\}/g,_28.id+"_menu");
_26.appendChild(tmp.firstChild);
_29=i$.byId(_28.id+"_menu");
_2a=i$.createDom("div");
_2a.innerHTML=_28._loadingTemplate;
}else{
var _2b=wptheme.contextMenu._findNodes(_26);
_29=_2b.menu;
if(!_28._menuitemTemplate){
_28._menuitemTemplate=i$.trim(_29.innerHTML);
}
if(!_28._loadingTemplate){
_2a=i$.createDom("div");
_2a.appendChild(_2b.loading);
_28._loadingTemplate=i$.trim(_2a.innerHTML);
_2a=null;
}
_2a=i$.createDom("div");
_2a.innerHTML=_28._loadingTemplate;
tmp.appendChild(_2b.submenu.cloneNode(true));
if(!_28._subMenuTemplate){
_28._subMenuTemplate=i$.trim(tmp.innerHTML);
}
}
while(_29.firstChild){
_29.removeChild(_29.firstChild);
}
_29.appendChild(_2a);
i$.addClass(_26,wptheme.contextMenu.css.show);
i$.bindDomEvt(i$.byId(_28.id),"onmouseleave",function(){
if(_28._inProgress){
_27=false;
}
var _2c=i$.byId(_28.id);
i$.removeClass(_2c,wptheme.contextMenu.css.show);
if(!_28.activeAction){
var _2d=_2c._currentSelected;
if(_2d){
_2d.blur();
}
var _2e=wptheme.contextMenu._findFocusNode(_2c);
((_2e)?_2e:_2c).focus();
}
});
return wptheme.contextMenu._load(_28).then(function(_2f){
var _30=wptheme.contextMenu._parseData(_2f).then(function(_31){
_31=wptheme.contextMenu._filterMenu(_31);
if(!_31||_31.length==0){
var tmp=i$.createDom("div");
tmp.innerHTML=wptheme.contextMenu._fromTemplate(_28._menuitemTemplate,wptheme.contextMenu.css.error,"No items to display.");
while(_29.firstChild){
_29.removeChild(_29.firstChild);
}
_29.appendChild(tmp);
}else{
wptheme.contextMenu._buildMenu(_28,_29,_31);
}
_28._inProgress=false;
wptheme.contextMenu.cache[_28.id]=true;
return {displayMenu:_27};
});
return _30;
},function(){
var tmp=i$.createDom("div");
tmp.innerHTML=wptheme.contextMenu._fromTemplate(_28._menuitemTemplate,wptheme.contextMenu.css.error,"Error happened while loading the menu.");
while(_29.firstChild){
_29.removeChild(_29.firstChild);
}
_29.appendChild(tmp);
_28._inProgress=false;
wptheme.contextMenu.cache[_28.id]=true;
return {displayMenu:_27};
});
},_load:function(_32){
var _33=_1.replace(/\$\{id\}/g,_32.menuId);
if(_32.jsonQuery){
_33+=(_33.indexOf("?")==-1?"?":"&")+i$.toQuery(_32.jsonQuery);
}
return i$.xhrGet({url:_33,headers:{"X-IBM-XHR":"true"},responseType:"json"}).then(function(_34){
return _34.data;
},function(_35){
var _36=_35.xhr.getResponseHeader("Content-Type")||"";
if((_36.indexOf("text/html")==0)||(_35.xhr.status==401)){
window.setTimeout(function(){
document.location.reload();
},0);
}
console.log("Error trying to load the context menu feed for '"+_32.menuId+"': "+_35);
return null;
});
},_parseData:function(_37){
var _38=[];
i$.each(_37,function(_39){
var _3a=i$.fromPath("moduleInfo.deferred",false,_39)?i$.modules.loadDeferred():i$.promise.resolved(true);
_38.push(_3a.then(function(){
var _3b=wptheme.contextMenu._checkFunction(_39,_39.visibilityFn,_39,(typeof _39.visibility!="undefined")?_39.visibility:true);
var _3c=wptheme.contextMenu._checkFunction(_39,_39.enableFn,_39,(typeof _39.enabled!="undefined")?_39.enabled:true);
return i$.whenAll(_3b,_3c).then(function(_3d){
_39._visible=_3d[0];
_39._enabled=_3d[1];
return _39;
});
}));
});
return i$.whenAll.apply(i$,_38);
},_filterMenu:function(_3e){
var _3f=[],_40,_41={"type":"Separator"};
for(var i=_3e.length-1;i>=0;i--){
_40=_3e[i];
if(!_40._visible){
continue;
}
if(_40.type=="Separator"){
if(_41.type=="Separator"){
continue;
}
}else{
if(_40.type=="Header"){
if((_41.type=="Separator")||(_41.type=="Header")){
continue;
}
}
}
_41=_40;
_3f.unshift(_40);
}
while(_3f.length>0&&_3f[0].type=="Separator"){
_3f=_3f.slice(1);
}
return _3f;
},_buildMenu:function(_42,_43,_44){
var _45=document.createDocumentFragment(),tmp=i$.createDom("div"),_46,_47,_48,_49;
for(var i=0,l=_44.length;i<l;i++){
_46=_44[i];
tmp.innerHTML=wptheme.contextMenu._fromTemplate(_42._menuitemTemplate,_46);
while(_47=tmp.firstChild){
if(_47.nodeType==1){
if(_46.type=="Submenu"){
_47._menuitem=_46;
_47._jsonData=_42;
i$.bindDomEvt(_47,"onmouseover",wptheme.contextMenu._applySubmenu);
}else{
if(_46._enabled){
_47.links={previous:_48,next:null,sub:null};
if(_48){
_48.links.next=_47;
}
if(!_49&&_46.type!="Header"){
_49=_47;
}
_47._menuitem=_46;
_48=_47;
i$.bindDomEvt(_47,"onclick",function(evt){
wptheme.contextMenu._stopEventPropagation(evt);
wptheme.contextMenu._applyAction(evt);
setTimeout(function(){
i$.removeClass(i$.byId(_42.id),wptheme.contextMenu.css.show);
},0);
});
i$.bindDomEvt(_47,"onkeydown",function(evt){
return wptheme.contextMenu._applyKeyAction(evt);
});
i$.bindDomEvt(_47,"onmouseover",function(evt){
return wptheme.contextMenu._applyFocusAction(evt);
});
}
}
if((_46.title)&&(i$.isRTL(_46.title.lang))){
i$.addClass(_47,"rtl");
_47.setAttribute("dir","RTL");
}
}
_45.appendChild(_47);
}
}
while(_43.firstChild){
_43.removeChild(_43.firstChild);
}
_43.appendChild(_45);
i$.byId(_42.id)._firstSelectable=_49;
i$.byId(_42.id)._currentSelected=null;
},_fromTemplate:function(_4a,_4b,_4c){
var _4d,_4e,_4f;
if(typeof (_4b)=="string"){
_4d=_4b;
_4e=_4c;
_4f="";
}else{
_4d="type"+_4b.type;
if(_4b.itemClass){
_4d+=" "+_4b.itemClass;
}
if(!_4b._enabled){
_4d+=" "+wptheme.contextMenu.css.disabled;
}
_4e=(_4b.title)?_4b.title.value:"";
_4f=((_4b.description)?_4b.description.value:"");
}
return _4a.replace(/\$\{title\}/g,_4e).replace(/"\$\{css-class\}"/g,"\""+(_4d)+"\"").replace(/\$\{css-class\}/g,"\""+(_4d)+"\"").replace(/"\$\{description\}"/g,"\""+_4f+"\"").replace(/\$\{description\}/g,"\""+_4f+"\"");
},_checkFunction:function(_50,fn,arg,_51){
if(fn){
if(!_50.fromPath){
_50.fromPath={};
}
var _52=_50.fromPath[fn]||i$.fromPath(fn);
_50.fromPath[fn]=_52;
if(i$.isFunction(_52)){
try{
return _52(arg);
}
catch(exc){
console.log("error executing function "+fn+" - "+exc);
}
}
}
return i$.promise.resolved(_51);
},_stopEventPropagation:function(evt){
if(evt){
if(evt.stopPropagation){
evt.stopPropagation();
}else{
evt.cancelBubble=true;
}
}
},_applyKeyAction:function(evt){
var _53=evt.target||evt.srcElement;
var _54=_53;
var _55=null;
while(!_55){
_54=_54.parentNode;
if(_54._contextMenu){
_55=_54;
}
}
var _56=_55._contextMenu;
switch(evt.keyCode){
case 13:
wptheme.contextMenu._stopEventPropagation(evt);
i$.removeClass(i$.byId(_56.id),wptheme.contextMenu.css.show);
var _57=wptheme.contextMenu._findFocusNode(_55);
((_57)?_57:_55).focus();
window.setTimeout(function(){
wptheme.contextMenu._applyAction(evt);
},0);
return false;
case 9:
case 27:
i$.removeClass(i$.byId(_56.id),wptheme.contextMenu.css.show);
var _57=wptheme.contextMenu._findFocusNode(_55);
((_57)?_57:_55).focus();
break;
case 40:
wptheme.contextMenu._moveFocus(evt,_56,_53,"next");
return false;
case 38:
wptheme.contextMenu._moveFocus(evt,_56,_53,"previous");
return false;
}
return true;
},_moveFocus:function(evt,_58,_59,_5a){
var _5b=_59.links[_5a];
if(_5b&&(_5b._menuitem.type=="Header"||_5b._menuitem.type=="Separator")){
var _5c=false;
var _5d=null;
while(!_5d&&!_5c){
_5b=_5b.links[_5a];
if(!_5b){
_5c=true;
}else{
if(_5b._menuitem.type!="Header"&&_5b._menuitem.type!="Separator"){
_5d=_5b;
}
}
}
_5b=_5d;
}
if(_5b){
var _5e=i$.byId(_58.id)._currentSelected;
if(_5e){
_5e.blur();
}
i$.byId(_58.id)._currentSelected=_5b;
_5b.focus();
}
if(evt.preventDefault){
evt.preventDefault();
}
},_applyFocusAction:function(evt){
var _5f=evt.target||evt.srcElement;
var _60=_5f;
var _61=null;
var _62=_5f._menuitem;
while(!_61){
_60=_60.parentNode;
if(_60._contextMenu){
_61=_60;
}
if(!_62){
_5f=_5f.parentNode;
_62=_5f._menuitem;
}
}
var _63=_61._contextMenu;
var _64=i$.byId(_63.id)._currentSelected;
if(_64!=_5f){
if(_64){
_64.blur();
i$.byId(_63.id)._currentSelected=null;
}
if(_62.type!="Header"&&_62.type!="Separator"){
i$.byId(_63.id)._currentSelected=_5f;
_5f.focus();
}
}
return false;
},_applyAction:function(evt){
var _65=evt.target||evt.srcElement;
var _66=_65;
var _67=null;
var _68=_65._menuitem;
while(!_67){
_66=_66.parentNode;
if(_66._contextMenu){
_67=_66;
}
if(!_68){
_65=_65.parentNode;
_68=_65._menuitem;
}
}
var _69=_67._contextMenu;
_69.activeAction=true;
var p=wptheme.contextMenu._checkFunction(_68,_68.actionFn,_68,_68.actionUrl);
if(p){
p.then(function(_6a){
if(_6a&&i$.isString(_6a)){
var _6b=_68.actionHttpMethod||"GET";
if(_6b!="GET"){
var _6c=i$.createDom("form");
_6c.setAttribute("action",_6a);
_6b=_6b.toLowerCase();
switch(_6b){
case "get":
_6c.setAttribute("method","GET");
break;
case "delete":
case "put":
var _6d=i$.createDom("input",{"type":"hidden","name":"x-method-override","value":_6b.toUpperCase()});
_6c.appendChild(_6d);
case "post":
_6c.setAttribute("method","POST");
_6c.setAttribute("enctype","multipart/form-data");
break;
default:
}
document.body.appendChild(_6c);
_6c.submit();
}else{
window.location.href=_6a;
}
}
});
}
},_applySubmenu:function(evt){
var _6e=evt.target||evt.srcElement;
if(!_6e._jsonData){
_6e=_6e.parentNode;
}
if(_6e._jsonData){
_6e.setAttribute("id",_6e._jsonData.id+"_"+_6e._menuitem.id);
wptheme.contextMenu.initSubmenu(_6e,_6e._menuitem.id,_6e._jsonData);
}
}}});
})();


}catch(e){console.log("Module 'wp_theme_menus': ",e);}
try{// create a test node off the browser screen to calculate high contrast mode
var testNode = document.createElement("div");
testNode.className = "highContrastTestNode";
document.body.appendChild(testNode);
// look at the computed style for the test node
var styles = null;
try {
	styles = document.defaultView.getComputedStyle(testNode, "");
} catch(e) {
	styles = testNode.currentStyle;
}
var testImg = styles.backgroundImage;
if ((styles.borderTopColor == styles.borderRightColor) || (testImg != null && (testImg == "none" || testImg == "url(invalid-url:)" ))) {
	document.getElementsByTagName("body")[0].className+=" lotusImagesOff";
}
document.body.removeChild(testNode);

}catch(e){console.log("Module 'wp_one_ui_21': ",e);}
try{/**
 * Scores a string against another string.
 *    'Hello World'.score('he');         //=> 0.5931818181818181
 *    'Hello World'.score('Hello');    //=> 0.7318181818181818
 */
String.prototype.score = function (word, fuzziness) {
	'use strict';

	// If the string is equal to the word, perfect match.
	if (this === word) { return 1; }

	//if it's not a perfect match and is empty return 0
	if (word === "") { return 0; }

	var runningScore = 0,
      charScore,
      finalScore,
      string = this,
      lString = string.toLowerCase(),
      strLength = string.length,
      lWord = word.toLowerCase(),
      wordLength = word.length,
      idxOf,
      startAt = 0,
      fuzzies = 1,
      fuzzyFactor,
      i;

	// Cache fuzzyFactor for speed increase
	if (fuzziness) { fuzzyFactor = 1 - fuzziness; }

	// Walk through word and add up scores.
	// Code duplication occurs to prevent checking fuzziness inside for loop
	if (fuzziness) {
		for (i = 0; i < wordLength; i+=1) {

		// Find next first case-insensitive match of a character.
		idxOf = lString.indexOf(lWord[i], startAt);

		if (idxOf === -1) {
			fuzzies += fuzzyFactor;
		}
		else {
			if (startAt === idxOf) {
				// Consecutive letter & start-of-string Bonus
				charScore = 0.7;
			}
			else {
				charScore = 0.1;
				// Acronym Bonus
				// Weighing Logic: Typing the first character of an acronym is as if you
				// preceded it with two perfect character matches.
				if (string[idxOf - 1] === ' ') { charScore += 0.8; }
			}

			// Same case bonus.
			if (string[idxOf] === word[i]) { charScore += 0.1; }
				// Update scores and startAt position for next round of indexOf
				runningScore += charScore;
				startAt = idxOf + 1;
			}
		}
	}
	else {
		for (i = 0; i < wordLength; i+=1) {
			idxOf = lString.indexOf(lWord[i], startAt);
			if (-1 === idxOf) { return 0; }

			if (startAt === idxOf) {
				charScore = 0.7;
			}
			else {
				charScore = 0.1;
				if (string[idxOf - 1] === ' ') { charScore += 0.8; }
			}
			if (string[idxOf] === word[i]) { charScore += 0.1; }
			runningScore += charScore;
			startAt = idxOf + 1;
		}
	}

	// Reduce penalty for longer strings.
	finalScore = 0.5 * (runningScore / strLength + runningScore / wordLength) / fuzzies;
	if ((lWord[0] === lString[0]) && (finalScore < 0.85)) {
		finalScore += 0.15;
	}
	return finalScore;
};

}catch(e){console.log("Module 'bic': ",e);}
try{var isDataLoaded = false;
var allpages = []; // pages
var pageIndex = []; // pageuniquename hash to page item

function loadMenuOptions(uri, startnode) {
	if (isDataLoaded)
		return;
	
	var resultPanelID = "resultPanel";

	var xmlhttp = new XMLHttpRequest();
	xmlhttp.onreadystatechange = function() {
		if ( xmlhttp.readyState == XMLHttpRequest.DONE ) {
			if (xmlhttp.status == 200) {
				var i = 0;
				var output = "";
				var xmlDoc;
				
				if ( !xmlhttp.responseXML.documentElement ) {
					xmlDoc = parseXML(xmlhttp.responseText);
					if (xmlDoc == null)
						throw new Error("Your browser can't read response");
				}
				else {
					xmlDoc = xmlhttp.responseXML;
				}
				var atomNS = "http://www.w3.org/2005/Atom";
				var thrNS = "http://purl.org/syndication/thread/1.0";
				var modelNS = "http://www.ibm.com/xmlns/prod/websphere/portal/v6.0.1/portal-model-elements";
				var baseNS = "http://www.ibm.com/xmlns/prod/websphere/portal/v6.0/ibm-portal-composite-base";
				var portalNS = "http://www.ibm.com/xmlns/prod/websphere/portal/v6.0.1/portal-model";
				var entries = xmlDoc.firstChild.getElementsByTagNameNS(atomNS,'entry');
				for (i = 0, s = entries.length; i < s; ++i) {
					var entry = entries.item(i);
					var title = entry.getElementsByTagNameNS(atomNS,'title').item(0).firstChild.nodeValue;
					var tmp = title.toLowerCase();
					var nodeId = entry.getElementsByTagNameNS(atomNS,'id').item(0).getAttributeNS(portalNS,'uniquename');
					var summary = entry.getElementsByTagNameNS(atomNS,'summary').item(0);
					if ( summary != null )
						summary = summary.firstChild.nodeValue;
					else
						summary = "";

					var model = entry.getElementsByTagNameNS(atomNS,'content').item(0).firstChild;
					var nodeType = null;
					var hp = "false";
					var furl = "";
					var icon = "";
					if ( model != null ) {
						nodeType = model.nodeName;
						model = model.getElementsByTagNameNS(modelNS,'metadata');
						for (j = 0, t = (model==null?0:model.length); j < t; j++) {
							var at = model.item(j);
							if ( at == null )
								break;
							if ( at.getAttribute('name') == "com.ibm.portal.Hidden" )
								hp = at.firstChild.getAttribute('value');
							else if ( at.getAttribute('name') == "com.ibm.portal.friendly.name" )
								furl = at.firstChild.getAttribute('value');
							else if ( at.getAttribute('name') == "com.ibm.portal.PageIcon" )
								icon = at.firstChild.getAttribute('value');
						}
					}
				
					var links = entry.getElementsByTagNameNS(atomNS,'link')
					var link = "";
					for (j = 0, t = links.length; j < t; j++) {
						if ( links.item(j).getAttribute("type") == "text/html" ) {
							link = links.item(j).getAttribute('href');
							break;
						}
					}
					if ( link == "" ) {
						for (j = 0, t = links.length; j < t; j++) {
							link = links.item(j).getAttribute('href');
							if ( link.contains('mypoc') )
								break;
						}
					}
					var parentId = entry.getElementsByTagNameNS(thrNS,'in-reply-to').item(0);
					if ( parentId != null )
						parentId = parentId.getAttributeNS(portalNS,'uniquename');
					else
						parentId = "";

					var page = {link: link, furl: furl, title: title, summary: summary, nodeId: nodeId, bestmatch: 9999, parentId: parentId, hidden: hp, icon: icon};
					pageIndex[nodeId] = page;
					allpages[allpages.length] =  page;
				}
				isDataLoaded = true;
			}
			else {
               console.debug('something else other than 200 was returned')
           }
		}
	};
	xmlhttp.open("GET", uri + "?uri=nm:oid:" + startnode + "&rep=compact&mdname=com.ibm.portal.Hidden&mdname=com.ibm.portal.friendly.name&mdname=com.ibm.portal.PageIcon", true);
	xmlhttp.overrideMimeType('text/xml');
    xmlhttp.send();
	
	var xhrArgs =
	{
	     //url: uri + "?uri=cm:oid:" + startnode + "&rep=compact&mdname=com.ibm.portal.Hidden&mdname=com.ibm.portal.friendly.name&mdname=com.ibm.portal.PageIcon",
		 url: uri + "?uri=nm:oid:" + startnode + "&rep=compact&mdname=com.ibm.portal.Hidden&mdname=com.ibm.portal.friendly.name&mdname=com.ibm.portal.PageIcon",
	     preventCache: true,
	     handleAs: "xml",
		 timeout: 10000,
		error: function(error, ioArgs){
			//dojo.byId(resultPanelID).innerHTML = "Error loading atom feed";
			console.debug("failed xhrGet for ATOM URL: ", error, ioArgs);
		}
	};
}

function removeAcentos(toByReplace) {
	var str_acento = '\xE1\xE9\xED\xF3\xFA\xF1\xC1\xC9\xCD\xD3\xDA\xD1\xE0\xE8\xEC\xF2\xF9\xC0\xC8\xCC\xD2\xD9';
	var str_sin_acento = 'aeiounAEIOUNaeiouAEIOU';
	var nueva ='';
	for (var i = 0; i < toByReplace.length; i++) {
		var idx = str_acento.indexOf(toByReplace.charAt(i));
		nueva += (idx != -1?str_sin_acento.charAt(idx):toByReplace.charAt(i));
	}
	return nueva;
}

function cleanUpSearchTerms(searchTerms) {
	var searchCleaned = []
	var i = 0;
	for (j=0; j<searchTerms.length; j++) {
		if ( searchTerms[j].length <= 1 || searchTerms[j] == "de" )
			continue;
		searchCleaned[i++] = searchTerms[j];
	}
	return searchCleaned;
}

// Compute the edit distance between the two given strings
function getEditDistance(a, b) {
	if (a.length === 0) return b.length; 
	if (b.length === 0) return a.length;
	var matrix = [];
	// increment along the first column of each row
	var i;
	for (i = 0; i <= b.length; i++){
		matrix[i] = [i];
	}
	// increment each column in the first row
	var j;
	for (j = 0; j <= a.length; j++){
		matrix[0][j] = j;
	}
	// Fill in the rest of the matrix
	for (i = 1; i <= b.length; i++){
		for (j = 1; j <= a.length; j++){
			if (b.charAt(i-1) == a.charAt(j-1)) {
				matrix[i][j] = matrix[i-1][j-1];
			}
			else {
				matrix[i][j] = Math.min(matrix[i-1][j-1] + 1, // substitution
					Math.min(matrix[i][j-1] + 1, // insertion
					matrix[i-1][j] + 1)); // deletion
			}
		}
	}
	return matrix[b.length][a.length];
}

function cleanUp() {
	document.getElementById("resultPanel").style.display = "none";
}

function searchTerm(input) {
	//var searchVal = cleanUpSearchTerms(removeAcentos(input).toLowerCase().split(" "));
	var searchVal = cleanUpSearchTerms([removeAcentos(input).toLowerCase()]);
	var totalitems = 0;
	
	var output = "";
	var furl2Remove = ["cst", "ope", "gn", "grp", "txs", "srv", "prd", "web"];
	for (i=0; i<allpages.length; i++) {
		furl = allpages[i].furl;
		// descartar toda las etiqueas genericas; 'Servicios', 'Transacciones', 'Consultas', 'Operaciones', etc, o los items hidden
		if ( furl2Remove.indexOf(furl) > -1 || allpages[i].hidden == "true" ) {
			allpages[i].bestmatch = 9999
			continue;
		}
		var bc = "";
		var parentId = allpages[i].parentId;
		var parent;
		while ( parentId != "wps.content.root" && parentId != "" && bc.length == 0 ) {
			parent = pageIndex[parentId];
			if ( parent.hidden == "true" )
				break;
			if ( furl2Remove.indexOf(parent.furl) == -1 )
				bc = parent.title + (bc.length>0?(" > " + bc):"");
			parentId = parent.parentId;
		}
		// Si el padre es hidden no puede aparace en el resultado de la busqueda.
		if ( parent != null && parent.hidden == "true" ) {
			allpages[i].bestmatch = 9999;
			continue;
		}
		allpages[i].bc = bc;
		
		var item = removeAcentos(allpages[i].title).toLowerCase();
		var description = removeAcentos(allpages[i].summary).toLowerCase();
		var grupo = removeAcentos(allpages[i].bc).toLowerCase();
		var rank = 9999;
		var itemDescription = item + " " + grupo; // + " " + description;
		for (j=0; j<searchVal.length; j++) {
			//if ( item.indexOf(searchVal[j]) >= 0 ) {
				//itemDescription = item;
				//rank = Math.min(rank, 1.0 - item.score(searchVal[j], true) );
				//rank = Math.min(rank, getEditDistance(item, searchVal[j]));
			//}
			//if ( description.indexOf(searchVal[j]) >= 0 ) {
				//itemDescription = itemDescription + " " + description;
				//rank = Math.min(rank, 1.0 - description.score(searchVal[j], true) );
				//rank = Math.min(rank, getEditDistance(description, searchVal[j]));
			//}
			//rank = Math.min(rank, 1.0 - item.score(searchVal[j], true) );
			//rank = Math.min(rank, 1.0 - description.score(searchVal[j], true) );
			if ( itemDescription.length > 0 )
				if ( rank == 9999 )
					rank = 1.0 - itemDescription.score(searchVal[j], true);
				else
					rank = (rank + (1.0 - itemDescription.score(searchVal[j], true)) ) / 2.0;
		}
		allpages[i].bestmatch = rank < 0.68?rank:9999;
	}
	allpages.sort(function (a,b) {
		if (a.bestmatch < b.bestmatch)
				return -1;
			if (a.bestmatch > b.bestmatch)
				return 1;
			return 0;
		}
	);
	
	for (i=0; i<allpages.length & totalitems<15; i++) {
		if ( allpages[i].bestmatch == 9999 )
			continue;
		
		var titulo = allpages[i].title;
		var descripcion	= allpages[i].summary;
		var bc = allpages[i].bc;
		for (j=0; j<searchVal.length; j++) {
			titulo = titulo.toLowerCase().replace(searchVal[j], '<b>'+searchVal[j]+'</b>');
			descricion = descripcion.toLowerCase().replace(searchVal[j], '<b>'+searchVal[j]+'</b>');
			bc = bc.toLowerCase().replace(searchVal[j], '<b>'+searchVal[j]+'</b>');
		}
		output += '<li class="itemmenu"><a lang="en" id="' + allpages[i].nodeId +
			'" href="' + allpages[i].link + 
			'" title="' + allpages[i].summary + 
			'" dir="ltr"' +
			' onclick="marcaGA([\'_trackEvent\',\'buscador\',\'' + allpages[i].nodeId + '\',\'' + allpages[i].title + '\']);"' +
			'></i><span class="titulo">' + titulo + (bc.length>0?(' - ' + bc):'') + '</span></a></li>';
		
		totalitems++;
	}
	
	if ( totalitems > 0 && searchVal.length > 0 ) {
		//document.getElementById("resultPanel").style.display = "block";
		document.getElementById("resultPanel").innerHTML = output;
	}
	else {
		//document.getElementById("resultPanel").style.display = "none";
		document.getElementById("resultPanel").innerHTML = "<li>Escriba lo que busca hacer; <b><i>pagar...</i></b></li>";
	}
}

}catch(e){console.log("Module 'bic': ",e);}